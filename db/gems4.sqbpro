<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/srv/www/htdocs/gems4/db/gems4.sql3" foreign_keys="0" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><current_tab id="1"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="4222"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="tblSecGroups"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="sqlite_stat1" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="tblClassDayTime" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="tblEmployees" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values><column index="2" value=""/><column index="4" value=""/></filter_values><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="tblJobTitles" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="tblSecGroups" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort><column index="1" mode="0"/></sort><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="tblSiteSettings" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="tblTABETestVers" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="tblTABETests" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="tblTeachersAssistants" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="tblTestHistory" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="tblTestID(1)" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="tblTests" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths><column index="2" value="209"/></column_widths><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="tblTimes" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="tblUserAuth" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="tblUserSettings" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths><column index="3" value="216"/></column_widths><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="tblUserTimesheet" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="tblUsers" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="vwEmployees" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="vwEnrollment" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="vwTimesheet" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="vwUserAuth" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table></browse_table_settings></tab_browse><tab_sql><sql name="create_tables">CREATE TABLE IF NOT EXISTS &quot;tblUsers&quot; (
        &quot;autoID&quot;        INTEGER PRIMARY KEY ASC,
        &quot;ID&quot;        TEXT NOT NULL UNIQUE,
        &quot;fName&quot; TEXT,
        &quot;lName&quot; TEXT,
        &quot;entryDate&quot; NUMERIC DEFAULT CURRENT_DATE,
		&quot;fk_enteredByID&quot; INTEGER DEFAULT &quot;0&quot;,
		&quot;lastUpdate&quot; TEXT,
		&quot;fk_updatedByID&quot; INTEGER DEFAULT &quot;0&quot;,
   		FOREIGN KEY (&quot;fk_enteredByID&quot;) REFERENCES &quot;tblUsers&quot;(&quot;autoID&quot;) ON UPDATE CASCADE ON DELETE SET NULL,
		FOREIGN KEY (&quot;fk_updatedByID&quot;) REFERENCES &quot;tblUsers&quot;(&quot;autoID&quot;) ON UPDATE CASCADE ON DELETE SET NULL
        );
		
CREATE TABLE IF NOT EXISTS &quot;tblStudentNotes&quot; (
				&quot;autoID&quot; INTEGER PRIMARY KEY ASC,
				&quot;fk_studentID&quot; INTEGER,
				&quot;noteText&quot; TEXT,
				&quot;fk_enteredByID&quot; INTEGER,
				&quot;entryDate&quot; NUMERIC DEFAULT CURRENT_DATE,
				&quot;fk_updatedByID&quot; INTEGER,
				&quot;lastUpdate&quot; TEXT,
				FOREIGN KEY (&quot;fk_studentID&quot;) REFERENCES &quot;tblUsers&quot;(&quot;autoID&quot;) ON UPDATE CASCADE ON DELETE SET NULL,
				FOREIGN KEY (&quot;fk_enteredByID&quot;) REFERENCES &quot;tblUsers&quot;(&quot;autoID&quot;) ON UPDATE CASCADE ON DELETE SET NULL,
				FOREIGN KEY (&quot;fk_updatedByID&quot;) REFERENCES &quot;TblUsers&quot;(&quot;autoID&quot;) ON UPDATE CASCADE ON DELETE SET NULL
				);
				
CREATE TABLE IF NOT EXISTS &quot;tblUserAuth&quot; (
                &quot;autoID&quot;        INTEGER PRIMARY KEY ASC,
                &quot;fk_userID&quot;        TEXT,
                &quot;passwd&quot;        TEXT,
                &quot;fk_secGroupID&quot;      INTEGER DEFAULT 5,
				&quot;fk_updatedByID&quot;	INTEGER,
				&quot;lastUpdate&quot; TEXT DEFAULT CURRENT_DATE,
                FOREIGN KEY(&quot;fk_secGroupID&quot;) REFERENCES &quot;tblSecGroups&quot;(&quot;autoID&quot;) ON UPDATE CASCADE ON DELETE SET DEFAULT,
                FOREIGN KEY(&quot;fk_userID&quot;)   REFERENCES &quot;tblUsers&quot;(&quot;autoID&quot;) ON UPDATE CASCADE ON DELETE CASCADE,
				FOREIGN KEY(&quot;fk_updatedByID&quot;) REFERENCES &quot;tblUsers&quot;(&quot;autoID&quot;) ON UPDATE CASCADE ON DELETE SET NULL
        );
		
CREATE TABLE IF NOT EXISTS &quot;tblSecGroups&quot; (
                &quot;autoID&quot; INTEGER , 
                &quot;secGroupName&quot; TEXT UNIQUE NOT NULL DEFAULT &quot;undefined&quot;,
                &quot;auth_login&quot; INTEGER DEFAULT 0,
				&quot;view_admin_options&quot; INTEGER DEFAULT 0,
				&quot;mod_sec_group&quot; INTEGER DEFAULT 0,
				&quot;mod_teacher&quot; INTEGER DEFAULT 0,
				&quot;u_add&quot; INTEGER DEFAULT 0,
				&quot;u_edit&quot; INTEGER DEFAULT 0,
				&quot;u_del&quot;  INTEGER DEFAULT 0,
				&quot;student_del&quot; INTEGER DEFAULT 0,
				&quot;t_add&quot; INTEGER DEFAULT 0,
				&quot;t_edit&quot; INTEGER DEFAULT 0,
				&quot;t_del&quot; INTEGER DEFAULT 0,
				PRIMARY KEY (&quot;autoID&quot;)
		);
		
CREATE TABLE IF NOT EXISTS &quot;tblEnrollment&quot; (
				autoID INTEGER,
				&quot;fk_userID&quot; INTEGER,
				&quot;fk_activeClassID&quot; INTEGER,
				&quot;entryDate&quot; NUMERIC DEFAULT CURRENT_DATE,
				&quot;fk_enrolledByID&quot; INTEGER,
				lastUpdate TEXT,
				fk_updatedByID INTEGER,
				PRIMARY KEY (&quot;autoId&quot;),
				FOREIGN KEY(&quot;fk_userID&quot;) REFERENCES &quot;tblUsers&quot;(&quot;autoID&quot;) ON UPDATE CASCADE ON DELETE CASCADE,
				FOREIGN KEY(&quot;fk_activeClassID&quot;) REFERENCES &quot;tblActiveClasses&quot;(&quot;autoID&quot;) ON UPDATE CASCADE ON DELETE SET NULL,
				FOREIGN KEY(&quot;fk_enrolledByID&quot;) REFERENCES &quot;tblUsers&quot;(&quot;autoID&quot;) ON UPDATE CASCADE ON DELETE SET  NULL ,
				FOREIGN KEY(&quot;fk_updatedByID&quot;) REFERENCES &quot;tblUsers&quot;(&quot;autoID&quot;) ON UPDATE CASCADE ON DELETE SET  NULL 
				);
				
CREATE TABLE IF NOT EXISTS &quot;tblClassDayTime&quot; (
				autoID INTEGER PRIMARY KEY ASC,
				fk_classID TEXT,
				fk_dayID TEXT,
				fk_timeID TEXT,
				FOREIGN KEY(&quot;fk_classID&quot;) REFERENCES &quot;tblClasses&quot;(&quot;autoID&quot;) ON UPDATE CASCADE ON DELETE CASCADE,
				FOREIGN KEY(&quot;fk_dayID&quot;) REFERENCES &quot;tblDays&quot;(&quot;autoID&quot;) ON UPDATE CASCADE ON DELETE SET NULL,
				FOREIGN KEY(&quot;fk_timeID&quot;) REFERENCES &quot;tblTimes&quot;(&quot;autoID&quot;) ON UPDATE CASCADE ON DELETE SET NULL
				);
				
CREATE TABLE IF NOT EXISTS &quot;tblClasses&quot; ( 
				autoID INTEGER PRIMARY KEY ASC,
				fk_subjectID TEXT,
				fk_classroomID TEXT,
				fk_teacherID TEXT,
				FOREIGN KEY(&quot;fk_subjectID&quot;) REFERENCES &quot;tblSubjects&quot;(&quot;autoID&quot;) ON UPDATE CASCADE ON DELETE SET NULL,
				FOREIGN KEY(&quot;fk_classroomID&quot;) REFERENCES &quot;tblClassrooms&quot;(&quot;autoID&quot;) ON UPDATE CASCADE ON DELETE SET NULL,
				FOREIGN KEY(&quot;fk_teacherID&quot;) REFERENCES &quot;tblTeachers&quot;(&quot;autoID&quot;) ON UPDATE CASCADE ON DELETE SET NULL
				);
CREATE TABLE IF NOT EXISTS &quot;tblDays&quot; (
				autoID INTEGER PRIMARY KEY ASC,
				day TEXT UNIQUE NOT NULL
				);
				
CREATE TABLE IF NOT EXISTS &quot;tblTimes&quot; (
				autoID INTEGER PRIMARY KEY ASC,
				time TEXT UNIQUE NOT NULL
				);
CREATE TABLE IF NOT EXISTS &quot;tblSubjects&quot; (
				autoID INTEGER PRIMARY KEY ASC,
				subject TEXT
				);
				
CREATE TABLE IF NOT EXISTS &quot;tblClassrooms&quot; (
				autoID INTEGER PRIMARY KEY ASC,
				roomNumber TEXT,
				roomName TEXT
				);
				
CREATE TABLE IF NOT EXISTS &quot;tblInstructors&quot; (
				autoID INTEGER PRIMARY KEY ASC,
				instructorName TEXT
				);
    
CREATE TABLE IF NOT EXISTS &quot;tblSiteSettings&quot; (
				autoID INTEGER PRIMARY KEY ASC,
				settingName TEXT UNIQUE,
				settingValue TEXT
				);

CREATE TABLE IF NOT EXISTS &quot;tblUserSettings&quot; (
				autoID INTEGER PRIMARY KEY ASC,
				fk_userID INTEGER,
				userTheme TEXT,
				userAvatar TEXT,
				avatarPic BLOB,
				FOREIGN KEY (&quot;fk_userID&quot;) REFERENCES &quot;tblUsers&quot; (&quot;autoID&quot;) ON UPDATE CASCADE ON DELETE CASCADE
				);
CREATE TABLE IF NOT EXISTS &quot;tblUserTimesheet&quot; (
				autoId INTEGER PRIMARY KEY ASC,
				fk_userID INTEGER,
				timeInAM TEXT,
				timeOutAM TEXT,
				timeInPM TEXT, 
				timeOutPM TEXT,
				dateValue NUMERIC,
				FOREIGN KEY (&quot;fk_userID&quot;) REFERENCES &quot;tblUsers&quot; (&quot;autoID&quot;) ON UPDATE CASCADE ON DELETE CASCADE
				UNIQUE (fk_userID,dateValue)
				);
CREATE TABLE IF NOT EXISTS &quot;tblEmployees&quot;(
				autoID INTEGER PRIMARY KEY ASC,
				fk_userID INTEGER,
				fk_jobTitle INTEGER,
				payRate INTEGER,
				dateHired NUMERIC DEFAULT CURRENT_DATE,
				FOREIGN KEY (&quot;fk_userID&quot;) REFERENCES &quot;tblUsers&quot; (&quot;autoID&quot;) ON UPDATE CASCADE ON DELETE CASCADE,
				FOREIGN KEY (&quot;fk_jobTitle&quot;) REFERENCES &quot;tblJobTitles&quot;(&quot;autoID&quot;) ON UPDATE CASCADE ON DELETE CASCADE
				UNIQUE (fk_userID,fk_jobTitle,payRate)
				);
CREATE TABLE IF NOT EXISTS &quot;tblTests&quot; (
				autoID INTEGER PRIMARY KEY ASC,
				testName TEXT DEFAULT NULL,
				passingScore INTEGER,
				testActive TEXT DEFAULT &quot;yes&quot;,
				certAvailable TEXT DEFAULT &quot;no&quot;
				);
CREATE TABLE IF NOT EXISTS &quot;tblTABETests&quot; (
				autoID INTEGER PRIMARY KEY ASC,
				testName TEXT DEFAULT NULL
				);
CREATE TABLE IF NOT EXISTS &quot;tblTABETestVers&quot; (
				autoID INTEGER PRIMARY KEY ASC,
				testVersion TEXT
				);
CREATE TABLE IF NOT EXISTS &quot;tblTestHistory&quot; (
				autoID INTEGER PRIMARY KEY ASC,
				fk_userID INTEGER,
				fk_testID INTEGER,
				testScore TEXT, 
				testDate NUMERIC DEFAULT CURRENT_DATE,
				certPrinted TEXT DEFAULT &quot;no&quot;,
				FOREIGN KEY (&quot;fk_userID&quot;) REFERENCES &quot;tblUsers&quot; (&quot;autoID&quot;) ON UPDATE CASCADE ON DELETE CASCADE,
				FOREIGN KEY (&quot;fk_testID&quot;) REFERENCES &quot;tblTests&quot; (&quot;autoID&quot;) ON UPDATE CASCADE ON DELETE CASCADE
			);
CREATE TABLE IF NOT EXISTS &quot;tblTABETestHistory&quot; (
				autoID INTEGER PRIMARY KEY ASC,
				fk_userID INTEGER,
				fk_testID INTEGER,
				fk_testVersID INTEGER,
				gradeEquiv NUMERIC,
				scaleScore INTEGER,
				testDate NUMERIC DEFAULT CURRENT_DATE,
				FOREIGN KEY (&quot;fk_userID&quot;) REFERENCES &quot;tblUsers&quot; (&quot;autoID&quot;) ON DELETE CASCADE ON UPDATE CASCADE,
				FOREIGN KEY (&quot;fk_testID&quot;) REFERENCES &quot;tblTABETests&quot; (&quot;autoID&quot;) ON DELETE SET NULL ON UPDATE CASCADE,
				FOREIGN KEY (&quot;fk_testVersID&quot;) REFERENCES &quot;tblTABETestVers&quot; (&quot;autoID&quot;) ON DELETE SET NULL ON UPDATE CASCADE
	
			);
				
CREATE VIEW IF NOT EXISTS vwUserAuth  AS  SELECT tblUsers.ID, tblUsers.fName,tblUsers.lName,tblSecGroups.secGroupName,tblUserAuth.passwd
FROM tblUserAuth
INNER JOIN tblUsers ON tblUserAuth.fk_userID = tblUsers.autoID
INNER JOIN tblSecGroups ON tblUserAuth.fk_secGroupID = tblSecGroups.autoID

;
CREATE VIEW IF NOT EXISTS vwEnrollment  AS SELECT tblUsers.fName, tblUsers.lName,  tblUsers.ID, tblSubjects.subject, tblClassrooms.roomNumber, tblTeachers.teacherName, tblDays.day, tblTimes.time
FROM tblEnrollment, tblClassDayTime, tblClasses
INNER JOIN tblUsers ON tblEnrollment.fk_userID = tblUsers.autoID
INNER JOIN tblSubjects ON tblClasses.fk_subjectID = tblSubjects.autoID
INNER JOIN tblClassrooms ON tblClasses.fk_classroomID = tblClassrooms.autoID
INNER JOIN tblTeachers  ON tblClasses.fk_teacherID = tblTeachers.autoID 
INNER JOIN tblDays ON tblClassDayTime.fk_dayID = tblDays.autoID
INNER JOIN tblTimes ON tblClassDayTime.fk_timeID = tblTimes.autoID
;
CREATE VIEW IF NOT EXISTS vwEmployees AS SELECT tblUsers.ID, tblUsers.lName, tblUsers.fName, tblJobTitles.jobTitle, tblEmployees.payRate,tblEmployees.dateHired
FROM tblEmployees
	INNER JOIN tblUsers ON tblUsers.autoID = tblEmployees.fk_userID
	INNER JOIN tblJobTitles on tblJobTitles.autoID = tblEmployees.fk_jobTitle;
				</sql><sql name="sec_join">SELECT tblUsers.ID, tblUsers.fName,tblUsers.lName,tblSecGroups.secGroupName
FROM tblUserAuth
INNER JOIN tblUsers ON tblUserAuth.fk_userID = tblUsers.autoID
INNER JOIN tblSecGroups ON tblUserAuth.fk_secGroupID = tblSecGroups.autoID

</sql><sql name="enrollment_join">SELECT tblUsers.fName, tblUsers.lName,  tblUsers.ID, tblSubjects.subject, tblClassrooms.roomNumber, tblTeachers.teacherName, tblDays.day, tblTimes.time
FROM tblEnrollment, tblClassDayTime, tblClasses
INNER JOIN tblUsers ON tblEnrollment.fk_userID = tblUsers.autoID
INNER JOIN tblSubjects ON tblClasses.fk_subjectID = tblSubjects.autoID
INNER JOIN tblClassrooms ON tblClasses.fk_classroomID = tblClassrooms.autoID
INNER JOIN tblTeachers  ON tblClasses.fk_teacherID = tblTeachers.autoID 
INNER JOIN tblDays ON tblClassDayTime.fk_dayID = tblDays.autoID
INNER JOIN tblTimes ON tblClassDayTime.fk_timeID = tblTimes.autoID
;
		





</sql><sql name="vwUserAuth">CREATE VIEW vwUserAuth AS  SELECT tblUsers.ID, tblUsers.fName,tblUsers.lName,tblSecGroups.secGroupName,tblUserAuth.passwd
FROM tblUserAuth
INNER JOIN tblUsers ON tblUserAuth.fk_userID = tblUsers.autoID
INNER JOIN tblSecGroups ON tblUserAuth.fk_secGroupID = tblSecGroups.autoID

;</sql><sql name="vwEnrollment">CREATE VIEW vwEnrollment AS SELECT tblUsers.fName, tblUsers.lName,  tblUsers.ID, tblSubjects.subject, tblClassrooms.roomNumber, tblTeachers.teacherName, tblDays.day, tblTimes.time
FROM tblEnrollment, tblClassDayTime, tblClasses
INNER JOIN tblUsers ON tblEnrollment.fk_userID = tblUsers.autoID
INNER JOIN tblSubjects ON tblClasses.fk_subjectID = tblSubjects.autoID
INNER JOIN tblClassrooms ON tblClasses.fk_classroomID = tblClassrooms.autoID
INNER JOIN tblTeachers  ON tblClasses.fk_teacherID = tblTeachers.autoID 
INNER JOIN tblDays ON tblClassDayTime.fk_dayID = tblDays.autoID
INNER JOIN tblTimes ON tblClassDayTime.fk_timeID = tblTimes.autoID
;
		



		</sql><sql name="vwEmployees">CREATE VIEW vwEmployees AS SELECT tblUsers.ID, tblUsers.lName, tblUsers.fName, tblJobTitles.jobTitle, tblEmployees.payRate,tblEmployees.dateHired
FROM tblEmployees
	INNER JOIN tblUsers ON tblUsers.autoID = tblEmployees.fk_userID
	INNER JOIN tblJobTitles on tblJobTitles.autoID = tblEmployees.fk_jobTitle</sql><sql name="vwMonumentToFutility">CREATE VIEW vwTimesheet AS WITH 
timeInAM(id1,timeInAM) AS 
	(SELECT tblUserTimesheet.fk_timeInAM,tblTimes.time FROM tblTimes, tblUserTimesheet WHERE tblTimes.autoId=tblUserTimesheet.fk_timeInAM),
timeOutAM(id2,timeOutAM) AS 
	(SELECT tblUserTimesheet.fk_timeOutAM,tblTimes.time FROM tblTimes, tblUserTimesheet WHERE tblTimes.autoId=tblUserTimesheet.fk_timeOutAM),
timeInPM(id3,timeInPM) AS 
	(SELECT tblUserTimesheet.fk_timeInPM,tblTimes.time FROM tblTimes, tblUserTimesheet WHERE tblTimes.autoId=tblUserTimesheet.fk_timeInPM),
timeOutPM(id4,timeOutPM) AS 
	(SELECT tblUserTimesheet.fk_timeOutPM,tblTimes.time FROM tblTimes, tblUserTimesheet WHERE tblTimes.autoId=tblUserTimesheet.fk_timeOutPM)

SELECT DISTINCT tblUsers.ID, timeInAM.timeInAM, timeOutAM.timeOutAM, timeInPM.timeInPM, timeOutPM.timeOutPM, tblUserTimeSheet.dateValue
	
FROM tblUserTimesheet
	 JOIN tblUsers ON tblUsers.autoID = tblUserTimesheet.fk_userID
	 JOIN timeInAM ON timeInAM.id1 = tblUserTimesheet.fk_timeInAM
	 JOIN timeOutAM ON timeOutAM.id2  = tblUserTimesheet.fk_timeOutAM
	 JOIN timeInPM ON timeInPM.id3 = tblUserTimesheet.fk_timeInPM
	 JOIN timeOutPM ON timeOutPM.id4 = tblUserTimesheet.fk_timeOutPM

	</sql><sql name="test">PRAGMA foreign_keys = 0;</sql><sql name="test-2">CREATE TABLE &quot;tblSecGroups&quot; (
                &quot;autoID&quot; INTEGER , 
                &quot;secGroupName&quot; TEXT UNIQUE NOT NULL DEFAULT &quot;undefined&quot;,
                &quot;auth_login&quot; INTEGER DEFAULT 0,
				&quot;view_admin_options&quot; INTEGER DEFAULT 0,
				&quot;mod_sec_group&quot; INTEGER DEFAULT 0,
				&quot;mod_teacher&quot; INTEGER DEFAULT 0,
				&quot;u_add&quot; INTEGER DEFAULT 0,
				&quot;u_edit&quot; INTEGER DEFAULT 0,
				&quot;u_del&quot;  INTEGER DEFAULT 0,
				&quot;student_del&quot; INTEGER DEFAULT 0,
				PRIMARY KEY (&quot;autoID&quot;)
		)</sql><current_tab id="0"/></tab_sql></sqlb_project>
